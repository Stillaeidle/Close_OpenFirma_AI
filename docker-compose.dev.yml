services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: openfirma-db-dev
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=openfirma_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./infra/postgresql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - openfirma-network

  # Backend API service
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: openfirma-api-dev
    # Changed command to use start.sh script that runs migrations first
    command: /app/scripts/start.sh
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=openfirma_dev
      - DEBUG=true
    depends_on:
      db:
        condition: service_healthy
    networks:
      - openfirma-network

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: openfirma-frontend-dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - api
    networks:
      - openfirma-network

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: openfirma-pgadmin-dev
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@openfirma.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "5050:80"
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - openfirma-network

volumes:
  postgres_dev_data:
  pgadmin_dev_data:

networks:
  openfirma-network:
    driver: bridge