name: Frontend Deploy

# Add explicit permissions at the workflow level
permissions:
  contents: read
  pull-requests: write  # Required for commenting on PRs

on:
  # Keep existing push triggers
  push:
    branches: [ main, release ]
    paths:
      - 'frontend/**'
  
  # Add pull request trigger
  pull_request:
    branches: [ main ]  # Only PRs targeting main branch
    types: [opened, synchronize, reopened]
    paths:
      - 'frontend/**'
  
  # Keep manual trigger
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    
    # Only run for pushes to main/release OR for PRs from dev to main
    if: >
      github.event_name == 'push' || 
      (github.event_name == 'pull_request' && github.head_ref == 'dev')
    
    # Set environment based on event type and branch
    environment:
      ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 'production' || 
          github.event_name == 'push' && github.ref == 'refs/heads/release' && 'staging' ||
          github.event_name == 'pull_request' && 'pr-preview' }}
    
    defaults:
      run:
        working-directory: frontend
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: |
          export NODE_ENV=production
          echo "Building with NODE_ENV=production"
          npm run build
      
      - name: Install Netlify CLI
        run: npm install -g netlify-cli
      
      - name: Deploy to Netlify
        run: |
          # Set site and deploy message based on event type
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
            NETLIFY_SITE_NAME="your-production-site-name"
            DEPLOY_MESSAGE="Production deploy from main branch"
          elif [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/release" ]]; then
            NETLIFY_SITE_NAME="your-staging-site-name"
            DEPLOY_MESSAGE="Staging deploy from release branch"
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            NETLIFY_SITE_NAME="f83f333e-13b8-4ad3-b5b1-0a14c9ff6232"
            DEPLOY_MESSAGE="PR #${{ github.event.pull_request.number }} preview - Dev to Main"
          else
            NETLIFY_SITE_NAME="your-staging-site-name"
            DEPLOY_MESSAGE="Manual deployment"
          fi
          
          echo "Deploying to Netlify site: $NETLIFY_SITE_NAME"
          
          # For PR, do a draft deploy. For push to main/release, do a production deploy
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            netlify deploy --dir=.next --message="$DEPLOY_MESSAGE" --site=$NETLIFY_SITE_NAME --auth=${{ secrets.NETLIFY_AUTH_TOKEN }}
          else
            netlify deploy --dir=.next --prod --message="$DEPLOY_MESSAGE" --site=$NETLIFY_SITE_NAME --auth=${{ secrets.NETLIFY_AUTH_TOKEN }}
          fi
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      
      # Add step to comment on the PR with the preview URL (for PRs only)
      - name: Comment on PR with Netlify URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Extract deploy URL from previous step (you might need to capture this from the Netlify CLI output)
            const deployUrl = 'https://pr-${{ github.event.pull_request.number }}--your-preview-site-name.netlify.app';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ PR Preview deployed to: [${deployUrl}](${deployUrl})`
            });
