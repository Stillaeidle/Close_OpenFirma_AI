name: Frontend Deploy

on:
  push:
    branches: [ main, release ]
    paths:
      - 'frontend/**'
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    
    # Set environment based on branch
    environment:
      ${{ github.ref == 'refs/heads/main' && 'production' || 
          github.ref == 'refs/heads/release' && 'staging' || 
          github.ref == 'refs/heads/dev' && 'development' }}
    
    defaults:
      run:
        working-directory: frontend
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: |
          # Set NODE_ENV based on branch
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            export NODE_ENV=production
            echo "Building with NODE_ENV=production"
          elif [[ "${{ github.ref }}" == "refs/heads/release" ]]; then
            export NODE_ENV=production
            echo "Building with NODE_ENV=production (for staging)"
          else
            export NODE_ENV=production
            echo "Building with NODE_ENV=production (for development)"
          fi
          
          npm run build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
      
      # - name: Deploy to environment (commented out)
      #   run: |
      #     echo "Deploying to ${{ github.ref == 'refs/heads/main' && 'production' || 
      #                             github.ref == 'refs/heads/release' && 'staging' || 
      #                             'development' }} environment"
      #     # Add deployment steps here when ready
      
      # - name: Notify deployment (commented out)
      #   uses: rtCamp/action-slack-notify@v2
      #   env:
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      #     SLACK_CHANNEL: deployments
      #     SLACK_COLOR: good
      #     SLACK_TITLE: Frontend Deployment
      #     SLACK_MESSAGE: 'Frontend has been deployed to ${{ github.ref == "refs/heads/main" && "production" || 
      #                                                     github.ref == "refs/heads/release" && "staging" || 
      #                                                     "development" }}'
      #     SLACK_FOOTER: 'Deployed from ${{ github.repository }}'
