name: Deploy

on:
  push:
    branches: [ main, release, dev ]
    paths:
      - 'frontend/**'
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    # Set environment based on branch
    environment:
      ${{ github.ref == 'refs/heads/main' && 'production' ||
          github.ref == 'refs/heads/release' && 'staging' ||
          github.ref == 'refs/heads/dev' && 'development' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm install
        working-directory: ./frontend

      - name: Build Next.js application
        run: npm run build
        working-directory: ./frontend
        env:
          # Set NODE_ENV based on the branch
          NODE_ENV: ${{ github.ref == 'refs/heads/main' && 'production' ||
                        github.ref == 'refs/heads/release' && 'staging' ||
                        github.ref == 'refs/heads/dev' && 'development' }}

      # Deployment to Vercel example (uncomment and configure as needed)
      # - name: Deploy to Vercel
      #   if: success()
      #   uses: amondnet/vercel-action@v25
      #   with:
      #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
      #     vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
      #     vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
      #     working-directory: ./frontend
      #     vercel-args: ${{ github.ref == 'refs/heads/main' && '--prod' || '' }}

      # Deployment to AWS S3/CloudFront example (uncomment and configure as needed)
      # - name: Configure AWS credentials
      #   if: success()
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-1
      #
      # - name: Deploy to S3
      #   run: |
      #     export ENV_NAME=${{ github.ref == 'refs/heads/main' && 'prod' || github.ref == 'refs/heads/release' && 'staging' || 'dev' }}
      #     aws s3 sync frontend/.next s3://your-bucket-name-${ENV_NAME}/ --delete
      #
      # - name: Invalidate CloudFront cache
      #   run: |
      #     export ENV_NAME=${{ github.ref == 'refs/heads/main' && 'prod' || github.ref == 'refs/heads/release' && 'staging' || 'dev' }}
      #     aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_PREFIX }}_${ENV_NAME} --paths "/*"
