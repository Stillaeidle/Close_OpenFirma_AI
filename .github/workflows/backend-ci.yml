name: Backend CI

on:
  push:
    branches: [ main, dev, release ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main, dev, release ]
    paths:
      - 'backend/**'

jobs:
  test:
    name: Test and Validate
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: openfirma_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: backend/requirements*.txt
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      
      - name: Lint with flake8
        run: |
          # Comment out or remove the flake8 command
          # flake8 app tests
          echo "Flake8 checking temporarily disabled"
      
      - name: Type check with mypy
        run: |
          mypy app
      
      - name: Run tests
        run: |
          pytest tests/
        env:
          POSTGRES_SERVER: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: openfirma_test
          SECRET_KEY: test_secret_key

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: false
          tags: openfirma-api:test
          cache-from: type=gha
          cache-to: type=gha,mode=max