"""initial migration

Revision ID: d11861c104c3
Revises: 
Create Date: 2025-04-02 13:03:55.299312+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd11861c104c3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('farms',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('area', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_farms_id'), 'farms', ['id'], unique=False)
    op.create_index(op.f('ix_farms_name'), 'farms', ['name'], unique=False)
    op.create_table('greenhouses',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('farm_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('area', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('length', sa.Float(), nullable=True),
    sa.Column('width', sa.Float(), nullable=True),
    sa.Column('chapel_width', sa.Float(), nullable=True),
    sa.Column('num_rows', sa.Integer(), nullable=True),
    sa.Column('row_orientation', sa.String(), nullable=True),
    sa.Column('structure_type', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['farm_id'], ['farms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_greenhouses_id'), 'greenhouses', ['id'], unique=False)
    op.create_index(op.f('ix_greenhouses_name'), 'greenhouses', ['name'], unique=False)
    op.create_table('measurements',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('greenhouse_id', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('temp_max_ext', sa.Float(), nullable=True),
    sa.Column('temp_min_ext', sa.Float(), nullable=True),
    sa.Column('temp_avg_ext', sa.Float(), nullable=True),
    sa.Column('temp_max_int', sa.Float(), nullable=True),
    sa.Column('temp_min_int', sa.Float(), nullable=True),
    sa.Column('temp_avg_int', sa.Float(), nullable=True),
    sa.Column('humidity_max_ext', sa.Float(), nullable=True),
    sa.Column('humidity_min_ext', sa.Float(), nullable=True),
    sa.Column('humidity_avg_ext', sa.Float(), nullable=True),
    sa.Column('humidity_max_int', sa.Float(), nullable=True),
    sa.Column('humidity_min_int', sa.Float(), nullable=True),
    sa.Column('humidity_avg_int', sa.Float(), nullable=True),
    sa.Column('solar_radiation', sa.Float(), nullable=True),
    sa.Column('wind_speed', sa.Float(), nullable=True),
    sa.Column('etp', sa.Float(), nullable=True),
    sa.Column('etc', sa.Float(), nullable=True),
    sa.Column('gdd', sa.Float(), nullable=True),
    sa.Column('water_morning', sa.Float(), nullable=True),
    sa.Column('water_evening', sa.Float(), nullable=True),
    sa.Column('total_water', sa.Float(), nullable=True),
    sa.Column('fertilizers', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['greenhouse_id'], ['greenhouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_measurements_id'), 'measurements', ['id'], unique=False)
    op.create_table('plantings',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('greenhouse_id', sa.String(), nullable=False),
    sa.Column('plant_type', sa.String(), nullable=True),
    sa.Column('plant_variety', sa.String(), nullable=True),
    sa.Column('planting_date', sa.DateTime(), nullable=False),
    sa.Column('harvest_start_date', sa.DateTime(), nullable=True),
    sa.Column('harvest_end_date', sa.DateTime(), nullable=True),
    sa.Column('plant_count', sa.Integer(), nullable=True),
    sa.Column('density', sa.Float(), nullable=True),
    sa.Column('support_type', sa.String(), nullable=True),
    sa.Column('mulch_type', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['greenhouse_id'], ['greenhouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_plantings_id'), 'plantings', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_plantings_id'), table_name='plantings')
    op.drop_table('plantings')
    op.drop_index(op.f('ix_measurements_id'), table_name='measurements')
    op.drop_table('measurements')
    op.drop_index(op.f('ix_greenhouses_name'), table_name='greenhouses')
    op.drop_index(op.f('ix_greenhouses_id'), table_name='greenhouses')
    op.drop_table('greenhouses')
    op.drop_index(op.f('ix_farms_name'), table_name='farms')
    op.drop_index(op.f('ix_farms_id'), table_name='farms')
    op.drop_table('farms')
    # ### end Alembic commands ###
